package university.Homework5.variant2;

import java.util.concurrent.Semaphore;

/*Вариант 2.
Разработать программу для моделирования ситуации в студенческом буфете, где остался
свободным только один столик. В буфет пришли 7 студентов, свободный столик
только один и одновременно за ним могут обедать только двое студентов.
Необходимо с использованием средств многопоточного программирования накормить всех студентов.
Очередность в данном случае не имеет значения. Обязательные требования к программе:
        +  В программе необходимо предусмотреть вывод в консоль (для наглядности) состояний студента.
        +  В рамках моделирования процедуры обеда заменить использовать 3-секундный сон потока.
        +  Одновременно могут обедать только два студента (то есть пока студент
не выйдет из-за стола, следующий не может начать обедать).
        +  При выполнении задания рекомендуется использовать семафоры
В результате работы программы необходимо вывести в консоль демонстрацию
поведения 7 студентов*/

public class StudentApplication {
    public static void main(String[] args) {
        Semaphore semaphore = new Semaphore(2);
        new Student("Студент 1", semaphore).start();
        new Student("Студент 2", semaphore).start();
        new Student("Студент 3", semaphore).start();
        new Student("Студент 4", semaphore).start();
        new Student("Студент 5", semaphore).start();
        new Student("Студент 6", semaphore).start();
        new Student("Студент 7", semaphore).start();
    }
}